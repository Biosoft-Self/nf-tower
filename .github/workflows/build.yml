name: Tower Continuous Build
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TZ: Asia/Shanghai

jobs:
  build:
    name: Tower Build
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false

    steps:
      - name: Environment
        run: env | sort

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
          architecture: x64

      - name: Run Tests
        run: ./gradlew clean test

      - name: Run Tests with MySQL
        run: ./gradlew clean build
        env:
          MICRONAUT_ENVIRONMENTS: mysql

      - name: Build Backend
        run: ./gradlew tower-backend:jibDockerBuild

      - name: Build Frontend
        run: docker build -t tower-web:latest tower-web

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata (tags and labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push Docker Image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install Cosign for Signing
        run: |
          curl -sSL https://github.com/sigstore/cosign/releases/download/v1.9.0/cosign-linux-amd64 -o /usr/local/bin/cosign
          chmod +x /usr/local/bin/cosign

      - name: Sign the Published Docker Image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
